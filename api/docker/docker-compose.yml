---
services:
  demo-api:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    ports:
      - 8080:8080
    environment:
      API_PORT: 8080
      BUCKET_NAME: $BUCKET_NAME
      BUCKET_PREFIX: demo/images
      DB_DATABASE_NAME: demodb
      DB_HOSTNAME: postgres
      DB_PASSWORD: demopassword
      DB_USERNAME: demouser
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - $AWS_CONFIG_DIR:/home/demo/.aws:ro

  postgres:
    image: postgres:16.2
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: demodb
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_PASSWORD: demopassword
      POSTGRES_USER: demouser
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
